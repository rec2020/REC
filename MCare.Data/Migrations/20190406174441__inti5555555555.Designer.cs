// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NajmetAlraqee.Data;

namespace NajmetAlraqee.Data.Migrations
{
    [DbContext(typeof(NajmetAlraqeeContext))]
    [Migration("20190406174441__inti5555555555")]
    partial class _inti5555555555
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Arrival", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Arrivals");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.BankDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<string>("AccountNumberInTree");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArrivalCityId");

                    b.Property<decimal>("ContractCost");

                    b.Property<string>("ContractDate");

                    b.Property<int?>("ContractInterVal");

                    b.Property<string>("ContractNote");

                    b.Property<int?>("ContractStatusId");

                    b.Property<int?>("ContractTypeId");

                    b.Property<int?>("ContractYear");

                    b.Property<string>("CreatedById");

                    b.Property<string>("CreationDate");

                    b.Property<int?>("CustomerId");

                    b.Property<decimal?>("EmployeeCost");

                    b.Property<int?>("EmployeeId");

                    b.Property<int?>("EmployeeNumber");

                    b.Property<string>("ExperienceYear");

                    b.Property<int?>("ForeignAgencyId");

                    b.Property<int?>("JobTypeId");

                    b.Property<string>("ModifybyId");

                    b.Property<int?>("OldContractNo");

                    b.Property<string>("QulaficationNote");

                    b.Property<decimal?>("SalaryMonth");

                    b.Property<int?>("TestDay");

                    b.Property<decimal>("VatCost");

                    b.Property<int?>("VicationDays");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalCityId");

                    b.HasIndex("ContractStatusId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ForeignAgencyId");

                    b.HasIndex("JobTypeId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ContractAction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "تم انشاء العقد"
                        },
                        new
                        {
                            Id = 2,
                            Name = "تم الاختيار"
                        },
                        new
                        {
                            Id = 3,
                            Name = "تم التفويض"
                        },
                        new
                        {
                            Id = 4,
                            Name = "تم التفيز"
                        },
                        new
                        {
                            Id = 5,
                            Name = "تم حجز تذكرة سفر"
                        },
                        new
                        {
                            Id = 6,
                            Name = "تم الاسترجاع"
                        },
                        new
                        {
                            Id = 7,
                            Name = "تم الاغلاق "
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractDelegation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContractId");

                    b.Property<string>("DelegateById");

                    b.Property<string>("DelegationDate");

                    b.Property<int?>("ForeignAgencyId");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("DelegateById");

                    b.HasIndex("ForeignAgencyId");

                    b.ToTable("ContractDelegations");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionById");

                    b.Property<string>("ActionByName");

                    b.Property<string>("ActionDate");

                    b.Property<int?>("ActionId");

                    b.Property<int>("ContractId");

                    b.Property<int?>("ContractStatusId");

                    b.Property<int?>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<int?>("EmployeeId");

                    b.Property<string>("EmployeeName");

                    b.Property<int?>("ForeignAgencyId");

                    b.Property<string>("ForeignAgencyName");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ContractId");

                    b.HasIndex("ContractStatusId");

                    b.ToTable("ContractHistories");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractSelect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId");

                    b.Property<int?>("ForeignAgencyId");

                    b.Property<int?>("PolNumer");

                    b.Property<string>("PolNumerDate");

                    b.Property<string>("SelectById");

                    b.Property<string>("SelectDate");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("ForeignAgencyId");

                    b.HasIndex("SelectById");

                    b.ToTable("ContractSelects");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ContractStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "جديد"
                        },
                        new
                        {
                            Id = 2,
                            Name = "تم الاختيار"
                        },
                        new
                        {
                            Id = 3,
                            Name = "تم التفويض"
                        },
                        new
                        {
                            Id = 4,
                            Name = "تم التفيز"
                        },
                        new
                        {
                            Id = 5,
                            Name = "تذكرة سفر"
                        },
                        new
                        {
                            Id = 6,
                            Name = "استرجاع"
                        },
                        new
                        {
                            Id = 7,
                            Name = "انتهي"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirLineName");

                    b.Property<string>("ArrivalDate");

                    b.Property<int?>("CityId");

                    b.Property<int>("ContractId");

                    b.Property<string>("Date");

                    b.Property<int?>("EmployeeId");

                    b.Property<string>("TicketById");

                    b.Property<string>("TicketDate");

                    b.Property<string>("Time");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ContractId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TicketById");

                    b.ToTable("ContractTickets");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ContractTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "أستقدام"
                        },
                        new
                        {
                            Id = 2,
                            Name = "معين"
                        },
                        new
                        {
                            Id = 3,
                            Name = "بديل"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractVisa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId");

                    b.Property<int?>("EmployeeId");

                    b.Property<string>("VisaById");

                    b.Property<string>("VisaDate");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VisaById");

                    b.ToTable("ContractVisas");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrencyTypeId");

                    b.Property<decimal>("ExchangeRate");

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyTypeId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.CurrencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CurrencyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "عملة محلية"
                        },
                        new
                        {
                            Id = 2,
                            Name = "عملة أجنبية"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CustomerTypeId");

                    b.Property<string>("FamilyImage");

                    b.Property<string>("FirstName");

                    b.Property<string>("FirstPhone");

                    b.Property<string>("IdentityNo");

                    b.Property<string>("IdentiyImage");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Name");

                    b.Property<string>("SecondPhone");

                    b.Property<int?>("UserDelegateId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("UserDelegateId")
                        .IsUnique()
                        .HasFilter("[UserDelegateId] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "داخلي"
                        },
                        new
                        {
                            Id = 2,
                            Name = "خارجي"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.DelegateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DelegateTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "مندوب داخلي "
                        },
                        new
                        {
                            Id = 2,
                            Name = "مندوب خارجي "
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.EducationLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName");

                    b.Property<string>("EnglishName");

                    b.HasKey("Id");

                    b.ToTable("EducationLevels");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressInOrigin");

                    b.Property<int?>("Age");

                    b.Property<decimal?>("Amountdeducted");

                    b.Property<string>("ArrivalDate");

                    b.Property<decimal?>("BasicSalary");

                    b.Property<string>("BirhtDate");

                    b.Property<string>("BorderNo");

                    b.Property<string>("ContractDate");

                    b.Property<string>("DriverLicenseExpireDate");

                    b.Property<string>("DriverLicenseIssueDate");

                    b.Property<int?>("DriverLicenseNo");

                    b.Property<string>("EmbassyContractDate");

                    b.Property<int?>("EmbassyContractNo");

                    b.Property<int?>("EmployeeStatusId");

                    b.Property<string>("EntrancePort");

                    b.Property<string>("ExpireDate");

                    b.Property<string>("Family");

                    b.Property<int?>("FamilyNo");

                    b.Property<string>("Father");

                    b.Property<int?>("FileNo");

                    b.Property<string>("FirstName");

                    b.Property<int?>("ForeignAgencyId");

                    b.Property<decimal?>("FuelAllowance");

                    b.Property<int?>("GenderId");

                    b.Property<string>("GrandFather");

                    b.Property<int?>("GroupNo");

                    b.Property<decimal?>("HousingAllowance");

                    b.Property<string>("IdentityExpireDate");

                    b.Property<string>("IdentityIssueDate");

                    b.Property<string>("IdentityNo");

                    b.Property<string>("IdentitySource");

                    b.Property<string>("IssueDate");

                    b.Property<string>("IssuePlace");

                    b.Property<int?>("JobTypeId");

                    b.Property<string>("KafeelName");

                    b.Property<int?>("KafeelNo");

                    b.Property<string>("LicenseExpireDate");

                    b.Property<int?>("LicenseNo");

                    b.Property<int?>("NationalityId");

                    b.Property<string>("NewKafeelAddress");

                    b.Property<string>("NewKafeelName");

                    b.Property<int?>("NewKafeelNo");

                    b.Property<int?>("NumberTime");

                    b.Property<string>("PassportNo");

                    b.Property<string>("PhonrInOrigin");

                    b.Property<int?>("ReligionId");

                    b.Property<int?>("SocialStatusId");

                    b.Property<decimal?>("Subsistence");

                    b.Property<decimal?>("Telephoneallowance");

                    b.Property<decimal?>("TotalSalary");

                    b.Property<decimal?>("TransportationAllowance");

                    b.Property<string>("VisaNo");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeStatusId");

                    b.HasIndex("ForeignAgencyId");

                    b.HasIndex("GenderId");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SocialStatusId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.EmployeeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EmployeeStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "علي راس العمل"
                        },
                        new
                        {
                            Id = 2,
                            Name = "تجربة"
                        },
                        new
                        {
                            Id = 3,
                            Name = "خروج نهائي"
                        },
                        new
                        {
                            Id = 4,
                            Name = "هروب"
                        },
                        new
                        {
                            Id = 5,
                            Name = "نقل كفالة"
                        },
                        new
                        {
                            Id = 6,
                            Name = "في السكن"
                        },
                        new
                        {
                            Id = 7,
                            Name = "جديد"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<int?>("Code");

                    b.Property<string>("Name");

                    b.Property<string>("PartnerCode");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ForeignAgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<string>("BankAccountNo");

                    b.Property<int?>("BankDetailId");

                    b.Property<int?>("CurrencyId");

                    b.Property<string>("Email");

                    b.Property<bool?>("IsActive");

                    b.Property<int?>("JobTypeId");

                    b.Property<int?>("NationalityId");

                    b.Property<string>("OfficeName");

                    b.Property<int?>("OfficeNumber");

                    b.Property<string>("Phone");

                    b.Property<decimal?>("Price");

                    b.Property<string>("ResponsibleUser");

                    b.HasKey("Id");

                    b.HasIndex("BankDetailId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("NationalityId");

                    b.ToTable("ForeignAgencies");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ذكر"
                        },
                        new
                        {
                            Id = 2,
                            Name = "أنثي"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName");

                    b.Property<string>("EnglishName");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "السعودية"
                        },
                        new
                        {
                            Id = 2,
                            Name = "مصر"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Deserved");

                    b.Property<decimal?>("Expenses");

                    b.Property<string>("Name");

                    b.Property<decimal?>("Percentage");

                    b.Property<decimal?>("Remiander");

                    b.Property<decimal?>("Transfer");

                    b.HasKey("Id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("TreeAccountNo");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Religions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "مسلم"
                        },
                        new
                        {
                            Id = 2,
                            Name = "مسيحي"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.SocialStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SocialStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "عازب/ة"
                        },
                        new
                        {
                            Id = 2,
                            Name = "متزوج/ة"
                        });
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Mobile");

                    b.Property<bool>("MobileIsVerified");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("OTP");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.UserDelegate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNoTree");

                    b.Property<decimal>("CommissionPrecentage");

                    b.Property<decimal>("CommissionValue");

                    b.Property<int>("DelegateTypeId");

                    b.Property<decimal>("DeservedAmount");

                    b.Property<string>("Name");

                    b.Property<int>("NationalityId");

                    b.Property<decimal>("RemainderAmount");

                    b.Property<decimal>("TransferAmount");

                    b.HasKey("Id");

                    b.HasIndex("DelegateTypeId");

                    b.HasIndex("NationalityId");

                    b.ToTable("UserDelegates");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NajmetAlraqee.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.City", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.Country", "Country")
                        .WithOne("City")
                        .HasForeignKey("NajmetAlraqee.Data.Entities.City", "CountryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Contract", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.City", "ArrivalCity")
                        .WithMany()
                        .HasForeignKey("ArrivalCityId");

                    b.HasOne("NajmetAlraqee.Data.Entities.ContractStatus", "ContractStatus")
                        .WithMany()
                        .HasForeignKey("ContractStatusId");

                    b.HasOne("NajmetAlraqee.Data.Entities.ContractType", "ContractType")
                        .WithMany()
                        .HasForeignKey("ContractTypeId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("NajmetAlraqee.Data.Entities.ForeignAgency", "ForeignAgency")
                        .WithMany()
                        .HasForeignKey("ForeignAgencyId");

                    b.HasOne("NajmetAlraqee.Data.Entities.JobType", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractDelegation", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("NajmetAlraqee.Data.Entities.User", "DelegateBy")
                        .WithMany()
                        .HasForeignKey("DelegateById");

                    b.HasOne("NajmetAlraqee.Data.Entities.ForeignAgency", "ForeignAgency")
                        .WithMany()
                        .HasForeignKey("ForeignAgencyId");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractHistory", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.ContractAction", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NajmetAlraqee.Data.Entities.ContractStatus", "ContractStatus")
                        .WithMany()
                        .HasForeignKey("ContractStatusId");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractSelect", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NajmetAlraqee.Data.Entities.ForeignAgency", "ForeignAgency")
                        .WithMany()
                        .HasForeignKey("ForeignAgencyId");

                    b.HasOne("NajmetAlraqee.Data.Entities.User", "SelectBy")
                        .WithMany()
                        .HasForeignKey("SelectById");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractTicket", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NajmetAlraqee.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("NajmetAlraqee.Data.Entities.User", "TicketBy")
                        .WithMany()
                        .HasForeignKey("TicketById");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ContractVisa", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NajmetAlraqee.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("NajmetAlraqee.Data.Entities.User", "VisaBy")
                        .WithMany()
                        .HasForeignKey("VisaById");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Currency", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Customer", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.CustomerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NajmetAlraqee.Data.Entities.UserDelegate", "UserDelegate")
                        .WithOne("Customer")
                        .HasForeignKey("NajmetAlraqee.Data.Entities.Customer", "UserDelegateId");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.Employee", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.EmployeeStatus", "EmployeeStatus")
                        .WithMany()
                        .HasForeignKey("EmployeeStatusId");

                    b.HasOne("NajmetAlraqee.Data.Entities.ForeignAgency", "ForeignAgency")
                        .WithMany()
                        .HasForeignKey("ForeignAgencyId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("NajmetAlraqee.Data.Entities.JobType", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.HasOne("NajmetAlraqee.Data.Entities.SocialStatus", "SocialStatus")
                        .WithMany()
                        .HasForeignKey("SocialStatusId");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.ForeignAgency", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.BankDetail", "BankDetail")
                        .WithMany()
                        .HasForeignKey("BankDetailId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("NajmetAlraqee.Data.Entities.JobType", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId");

                    b.HasOne("NajmetAlraqee.Data.Entities.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");
                });

            modelBuilder.Entity("NajmetAlraqee.Data.Entities.UserDelegate", b =>
                {
                    b.HasOne("NajmetAlraqee.Data.Entities.DelegateType", "DelegateType")
                        .WithMany()
                        .HasForeignKey("DelegateTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NajmetAlraqee.Data.Entities.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
